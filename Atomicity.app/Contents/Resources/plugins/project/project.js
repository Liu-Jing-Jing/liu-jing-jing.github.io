// Generated by CoffeeScript 1.12.7
(function() {
  var $, Chrome, Dir, Editor, File, Process, _, bindKey, ref;

  $ = require('jquery');

  _ = require('underscore');

  ref = require('osx'), Chrome = ref.Chrome, Dir = ref.Dir, File = ref.File, Process = ref.Process;

  Editor = require('editor');

  bindKey = Editor.bindKey;

  exports.init = function() {
    this.html = require("project/project.html");
    bindKey('toggleProjectDrawer', 'Command-Ctrl-N', (function(_this) {
      return function(env) {
        return _this.toggle();
      };
    })(this));
    Editor.ace.on('open', (function(_this) {
      return function() {
        if ((_this.dir != null) && Process.cwd() !== _this.dir) {
          return _this.reload();
        }
      };
    })(this));
    $('#project .cwd').live('click', (function(_this) {
      return function(event) {
        return Editor.open(_this.dir.replace(_.last(_this.dir.split('/')), ''));
      };
    })(this));
    return $('#project li').live('click', (function(_this) {
      return function(event) {
        var el, path;
        $('#project .active').removeClass('active');
        el = $(event.currentTarget);
        el.addClass('active');
        path = decodeURIComponent(el.attr('path'));
        return Editor.open(path);
      };
    })(this));
  };

  exports.toggle = function() {
    if (this.showing) {
      $('#project').parent().remove();
    } else {
      Chrome.addPane('left', this.html);
      this.reload();
    }
    return this.showing = !this.showing;
  };

  exports.reload = function() {
    var dir, files, listItems;
    this.dir = dir = Process.cwd();
    $('#project .cwd').text(_.last(dir.split('/')));
    $('#project li').remove();
    files = Dir.list(dir);
    listItems = _.map(files, function(path) {
      var filename, type;
      filename = path.replace(dir, "").substring(1);
      type = Dir.isDir(path) ? 'dir' : 'file';
      return "<li class='" + type + "' path='" + (encodeURIComponent(path)) + "'>" + filename + "</li>";
    });
    return $('#project .files').append(listItems.join('\n'));
  };

}).call(this);
